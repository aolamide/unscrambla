{"version":3,"sources":["connection.js","pages/Home.jsx","components/Loading/Loading.jsx","components/HostWaiting/HostWaiting.jsx","components/GamePreparing/GamePreparing.jsx","components/Game/Game.jsx","components/NameForm/NameForm.jsx","pages/Play.jsx","App.js","reportWebVitals.js","index.js"],"names":["socket","socketIOClient","ConnectionContext","createContext","Home","useState","code","setCode","navigate","useNavigate","onSubmit","e","preventDefault","type","value","onChange","target","name","placeholder","to","Loading","HostWaiting","GamePreparing","opponentName","countdown","setCountDown","useEffect","interval","setInterval","clearInterval","style","display","Game","NameForm","host","gameCode","setName","useContext","emit","playerName","Play","loading","setLoading","isHost","setIsHost","setGameCode","playerTwoName","setPlayerTwoName","hostWaiting","setHostWaiting","gamePreparing","setGamePreparing","gameStarted","setGameStarted","useSearchParams","params","get","on","success","msg","alert","gameId","off","playerTwo","App","console","log","id","Provider","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20f738e3.chunk.js","sourcesContent":["import { createContext } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nexport const socket = socketIOClient();\r\nexport const ConnectionContext = createContext();","import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n  const [code, setCode] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const submitCode = e => {\r\n    e.preventDefault();\r\n    navigate('/play?code=' + code);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitCode}>\r\n        <h2>JOIN GAME</h2>\r\n        <input type=\"text\" value={code} onChange={e => setCode(e.target.value)} name='code' placeholder=\"Enter game code\" />\r\n        <button>Join Game</button>\r\n      </form>\r\n      <p>OR</p>\r\n      <Link to='/play'>\r\n        HOST GAME\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst Loading = () => {\r\n  return <p>Loading...</p>\r\n}\r\n\r\nexport default Loading;","import React from 'react'\r\n\r\nconst HostWaiting = ({ code }) => {\r\n  return (\r\n    <div>\r\n      <p>Tell the other play to visit jjj.com and join with the code <strong>{code}</strong></p>\r\n      <p>Waiting for player to join...</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HostWaiting;","import React, { useState, useEffect } from 'react'\r\n\r\nconst GamePreparing = ({ name, opponentName }) => {\r\n  const [countdown, setCountDown] = useState(10);\r\n\r\n  useEffect(() => {\r\n    let interval = setInterval(() => setCountDown(countdown => --countdown), 1000);\r\n    return (() => clearInterval(interval));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <p>Ready ! Game starts in <strong>{countdown}</strong></p>\r\n      <div style={{ display : 'flex' }}>\r\n        <div>\r\n          <small>You</small>\r\n          <p>{name}</p>\r\n        </div>\r\n        <div>\r\n          <small>Opponent</small>\r\n          <p>{opponentName}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GamePreparing;","import React from 'react'\r\n\r\nconst Game = () => {\r\n  return (\r\n    <div>\r\n      <p>Game has started</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game","import React, { useContext, useState } from 'react'\r\nimport { ConnectionContext } from '../../connection'\r\n\r\nconst NameForm = ({ host, gameCode }) => {\r\n  const [name, setName] = useState('');\r\n  const socket = useContext(ConnectionContext);\r\n\r\n  const hostGame = e => {\r\n    e.preventDefault();\r\n    socket.emit('createGame', name);\r\n  }\r\n\r\n  const joinGame = e => {\r\n    e.preventDefault();\r\n    socket.emit('joinGame', { playerName : name, gameCode });\r\n  }\r\n  return (\r\n    <div>\r\n      <form onSubmit={host ? hostGame : joinGame}>\r\n        <input value={name} onChange={e => setName(e.target.value)} type=\"text\" placeholder=\"Enter your name\" />\r\n        <button>{host ? 'HOST GAME' : 'JOIN GAME'}</button>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nexport default NameForm","import React, { useContext, useEffect, useState } from 'react';\r\nimport { ConnectionContext } from '../connection';\r\nimport { useSearchParams, useNavigate } from 'react-router-dom'\r\nimport Loading from '../components/Loading/Loading';\r\nimport HostWaiting from '../components/HostWaiting/HostWaiting';\r\nimport GamePreparing from '../components/GamePreparing/GamePreparing';\r\nimport Game from '../components/Game/Game';\r\nimport NameForm from '../components/NameForm/NameForm';\r\n\r\n\r\nconst Play = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [isHost, setIsHost] = useState(true);\r\n  const [gameCode, setGameCode] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [playerTwoName, setPlayerTwoName] = useState('');\r\n  const [hostWaiting, setHostWaiting] = useState(false);\r\n  const [gamePreparing, setGamePreparing] = useState(false);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [params, _] = useSearchParams();\r\n  const socket = useContext(ConnectionContext);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    let code = params.get('code');\r\n    if(code) {\r\n      setIsHost(false);\r\n      socket.emit('checkCode', code);\r\n      socket.on('checkCodeResult', ({ success, msg }) => {\r\n        if(success) {\r\n          setLoading(false);\r\n          setGameCode(code);\r\n        } \r\n        else {\r\n          alert(msg);\r\n          navigate('/');\r\n        }\r\n      })\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n    socket.on('gameCreated', gameId => {\r\n      setGameCode(gameId);\r\n      setHostWaiting(true);\r\n    });\r\n    \r\n    socket.on('gameStarted', () => {\r\n      setGamePreparing(false);\r\n      setGameStarted(true);\r\n    });\r\n\r\n    return (() => {\r\n      socket.off('checkCodeResult');\r\n      socket.off('gameCreated');\r\n      socket.off('gameReady');\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on('gameReady', ({ host, playerTwo }) => {\r\n      setName(isHost ? host : playerTwo);\r\n      setPlayerTwoName(isHost ? playerTwo : host);\r\n      \r\n      setHostWaiting(false);\r\n      setGamePreparing(true);\r\n    });\r\n    return (() => {\r\n      socket.off('gameReady');\r\n    })\r\n  }, [isHost]);\r\n\r\n  if(loading) return <Loading />\r\n  if(hostWaiting) return <HostWaiting code={gameCode} />\r\n  if(gamePreparing) return <GamePreparing name={name} opponentName={playerTwoName} />\r\n  if(gameStarted) return <Game />\r\n  return (\r\n    <NameForm host={isHost} gameCode={gameCode} />\r\n  );\r\n}\r\n\r\nexport default Play;","import './App.css';\nimport { useEffect } from 'react'\nimport { ConnectionContext, socket } from './connection';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport Home from './pages/Home';\nimport Play from './pages/Play';\n\nfunction App() {\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log(socket.id);\n    })\n  }, []);\n\n  return (\n    <ConnectionContext.Provider value={socket}>\n      <Router>\n        <Routes>\n          <Route path='/' element={<Home />} />\n          <Route path='/play' element={<Play />} />\n        </Routes>\n      </Router>\n      {/* <div className=\"App\">\n        <p>Hey there</p>\n      </div> */}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}